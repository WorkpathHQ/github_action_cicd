name: Base Build image

on: 
  workflow_call:
    inputs:
      AWS_DEFAULT_REGION:
        type: string
        required: true
      ECR_REGISTRY: 
        type: string
        required: true
      ECR_REPOSITORY:
        type: string
        required: true
      IMAGE_TAG:
        type: string
        required: true
      API_BASE:
        type: string
        required: true
      GA_TRACKING_ID:
        type: string
        required: true
      SENTRY_ENVIRONMENT:
        type: string
        required: true
      SENTRY_URL:
        type: string
        required: true
      CYPRESS_USER_AUTH_USER:
        type: string
        required: true
      CYPRESS_BASE_URL:
        type: string
        required: true
      CYPRESS_WORKPATH_ACCOUNT:
        type: string
        required: true

    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      FONTAWESOME_TOKEN:
        required: true
      BAUKASTEN_TOKEN:
        required: true
      CYPRESS_USER_AUTH_PASS:
        required: true
      CYPRESS_SESSION_AUTH_TOKEN:
        required: true
      
jobs:
  base_build_image:
    name: Build image
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2
     
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ inputs.AWS_DEFAULT_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to AWS ECR
        run: |
          docker build --build-arg FONTAWESOME_TOKEN=${{ secrets.FONTAWESOME_TOKEN }} --build-arg API_BASE=${{ inputs.API_BASE }} --build-arg BAUKASTEN_TOKEN=${{ secrets.BAUKASTEN_TOKEN }} --build-arg SENTRY_URL=${{ inputs.SENTRY_URL }} --build-arg GA_TRACKING_ID=${{ inputs.GA_TRACKING_ID }} --build-arg SENTRY_ENVIRONMENT=${{ inputs.SENTRY_ENVIRONMENT }} --build-arg CYPRESS_USER_AUTH_USER=${{ inputs.CYPRESS_USER_AUTH_USER }} --build-arg CYPRESS_USER_AUTH_PASS=${{ secrets.CYPRESS_USER_AUTH_PASS }} --build-arg CYPRESS_BASE_URL=${{ inputs.CYPRESS_BASE_URL }} --build-arg CYPRESS_WORKPATH_ACCOUNT=${{ inputs.CYPRESS_WORKPATH_ACCOUNT }} --build-arg CYPRESS_SESSION_AUTH_TOKEN=${{ secrets.CYPRESS_SESSION_AUTH_TOKEN }} --tag ${{ inputs.ECR_REGISTRY }}/${{ inputs.ECR_REPOSITORY }}:${{ inputs.IMAGE_TAG }} .
          docker push ${{ inputs.ECR_REGISTRY }}/${{ inputs.ECR_REPOSITORY }}:${{ inputs.IMAGE_TAG }}
